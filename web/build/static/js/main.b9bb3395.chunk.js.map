{"version":3,"sources":["assets/imgs/undraw_schedule_pnbk.png","assets/backgrounds/priscilla-du-preez-XkKCui44iM0-unsplash.jpg","assets/backgrounds/teemu-paananen-bzdhc5b3Bxs-unsplash.jpg","assets/backgrounds/Homebanner.png","assets/backgrounds/william-recinos-qtYhAQnIwSE-unsplash.jpg","components/navbar/Navbar.js","components/navbar/index.js","components/layout/MainLayout.js","components/layout/index.js","components/homeBanner/homeBanner.js","components/homeBanner/index.js","components/homeEvents/hEvent.js","components/homeEvents/index.js","components/contentLayout/index.js","components/contentLayout/contentLayout.js","components/spinner/index.js","components/spinner/Spinner.js","views/home/home.js","views/home/index.js","components/signInForm/SignInForm.js","components/signInForm/index.js","views/signIn/SignIn.js","views/signIn/index.js","data/redux/actions/actions.js","server.js","components/photoLoader/photoLoader.js","components/photoLoader/index.js","components/signUpForm/SignUpForm.js","components/signUpForm/index.js","views/signUp/SignUp.js","views/signUp/index.js","components/groupsBanner/groupBanner.js","components/groupsBanner/index.js","views/substrings.js","views/groups/groups.js","views/groups/index.js","components/eventsBanner/eventsBanner.js","components/eventsBanner/index.js","views/events/events.js","views/events/index.js","components/groupCard/index.js","components/groupCard/groupCard.js","components/groupBanner/groupBanner.js","components/groupBanner/index.js","components/adminList/index.js","components/adminList/aList.js","components/eventList/eList.js","components/eventList/index.js","views/groupProfile/groupProf.js","views/groupProfile/index.js","components/map/index.js","components/map/map.js","components/eventCard/evCard.js","components/eventCard/index.js","components/eventComments/eComments.js","components/eventComments/index.js","components/eventBanner/eventBanner.js","components/eventBanner/index.js","components/assistList/index.js","components/assistList/aList.js","views/eventProfile/eventProf.js","views/eventProfile/index.js","components/userHeader/userHeader.js","components/userHeader/index.js","components/userInfo/index.js","components/userInfo/uInfo.js","components/eventosUsuario/evUsuario.js","components/eventosUsuario/index.js","components/gruposUsuario/index.js","components/gruposUsuario/grUsuario.js","views/userProfile/userProf.js","views/userProfile/index.js","components/createGroupForm/createGroupForm.js","components/createGroupForm/index.js","components/succesfulOperation/index.js","components/succesfulOperation/Successful.js","views/createGroup/createGroup.js","views/createGroup/index.js","components/createEventForm/createEventForm.js","components/createEventForm/index.js","views/createEvent/createEvent.js","views/createEvent/index.js","views/uploadPhotoTest/photoTest.js","views/uploadPhotoTest/index.js","routes/routes.js","data/redux/reducers/reducers.js","data/redux/store/index.js","App.js","ApolloProvider.js","index.js","assets/icons/eventumIcon.png"],"names":["module","exports","Header","Layout","SubMenu","Menu","Navbar","activeuser","useSelector","state","userId","style","position","zIndex","width","display","justifyContent","backgroundImage","className","activeClassName","to","alignItems","height","src","EventumIcon","alt","theme","mode","lineHeight","background","fontWeight","color","Item","key","title","Icon","type","Footer","Content","MainLayout","props","minHeight","children","Sider","HomeBanner","Background","backgroundSize","backgroundPosition","paddingTop","textAlign","marginTop","fontSize","Meta","Card","HomeEvents","pagination","onChange","page","console","log","pageSize","dataSource","data","grid","gutter","column","renderItem","item","cover","picture","href","name","description","Spinner","size","GET_EVENTS","gql","Home","useQuery","loading","error","evList","i","allEvents","length","photo","push","id","Fragment","Title","Typography","WrappedSignInForm","onFinish","getFieldDecorator","pending","level","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","marginBottom","showIcon","htmlType","SIGNIN_MUTATION","USERID_MUTATION","SignIn","history","useHistory","dispatch","useDispatch","useState","successful","setSuccessful","errorMessage","setErrorMessage","useMutation","errorPolicy","signInMutation","userIdMutation","loadingUserMutation","values","a","variables","username","email","password","localStorage","setItem","logUser","access","refresh","token","idUser","vrfTok","e","graphQLErrors","errorPromt","detail","useEffect","ipApiGetway","ipLoadImages","beforeUpload","file","isJpgOrPng","isLt2M","PhotoLoader","handleChange","info","status","response","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","setState","uploadButton","this","LoadingOutlined","PlusOutlined","listType","showUploadList","action","enctype","React","Component","Select","Option","WrappedSignUpForm","handleSubmit","showModal","useImageUrl","confirmDirty","setConfirmDirty","labelCol","xs","span","sm","wrapperCol","justify","padding","margin","labelAlign","label","hasFeedback","min","Password","extra","ependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","onBlur","target","len","SIGNUP_MUTATION","SignUp","photoPath","setPhotoPath","signUpMutation","phone_number","phone","age","parseInt","career","errors","Modal","success","okText","content","onOk","photoUrl","GroupBanner","containsSubStrings","container","contained","splitted","toLowerCase","split","contains","index","includes","GET_ALL_GROUPS_AND_TYPES","pickedCategory","searchedGroups","Groups","search","allGroups","id_type","changeGroupList","groupList","IconText","icon","text","createElement","categories","groupTypes","forEach","element","options","selectedOption","header","itemLayout","actions","StarOutlined","followers","id_group","EventsBanner","GET_ALL_EVENTS","pickedStatus","searchedEvents","states","Events","changeEventList","eventList","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","GroupCard","created_date","contact_number","backgroundColor","backgroundBlendMode","AssistList","hasMore","handleInfiniteOnLoad","fetchData","res","concat","results","initialLoad","pageStart","loadMore","useWindow","EventsList","GROUP_PROFILE_QUERY","GroupProfile","match","params","aList","groupProfile","admins","grPhoto","flex","events","EventMap","lat","lng","MarkersOnMap","Init","mapWidth","mapHeight","mapBackgroundColor","mapCenterLat","mapCenterLong","mapMinZoom","mapZoomLevel","mapMaxZoom","googleApiKey","markerObjects","markerLat","markerLong","Run","CREATE_ASSIST_MUTATION","DELETE_ASSIST_MUTATION","EventCard","start","finish","asist","actUser","eventID","onAsistHandler","onAsistHandler2","loading2","data2","val","error2","asistButton","user_id","event_id","deleteButton","eventId","refetchProfile","disabled","onClick","CREATE_COMMENT_MUTATION","EventComments","commentList","Form","useForm","form","idu","idEvent","ide","comment","resetFields","LikeOutlined","likes","DislikeOutlined","dislikes","allowClear","EventBanner","setLoading","setHasMore","EVENT_PROFILE_QUERY","GET_USER_NAME","EventProfile","evId","refetch","evAsist","load","evPhoto","eventProfile","idAList","assistant","comments","eventStartDate","eventFinishDate","parseFloat","latitude","longitude","userProfile","UserHeader","UserInfo","bordered","EventoUsuario","isActiveUser","shape","GrupoUsuario","GET_USER_PROFILE","UserProfile","uId","profilePhoto","grList","groupsFollowing","groupPhoto","eventsCreated","eventPhoto","CreateGroupForm","layout","offset","map","max","Successful","redirect","processCompleted","GROUP_TYPES_QUERY","CREATE_GROUP_MUTATION","CreateGroup","createGroupMutation","loadingCreate","groupType","groupName","id_user","RangePicker","DatePicker","CreateEventForm","showTime","CREATE_EVENT_MUTATION","formatDate","moment","format","CreateEvent","createEventMutation","formatedDates","date","ownerId","ownerType","eventType","url","Avatar","routes","exact","path","component","initialState","eventumApp","Object","assign","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","cache","InMemoryCache","client","ApolloClient","uri","process","GATEWAY_URL","writeData","profile","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b9bb3395.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_schedule_pnbk.6255734f.png\";","module.exports = __webpack_public_path__ + \"static/media/priscilla-du-preez-XkKCui44iM0-unsplash.f7c031a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/teemu-paananen-bzdhc5b3Bxs-unsplash.a338d7fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Homebanner.f7874522.png\";","module.exports = __webpack_public_path__ + \"static/media/william-recinos-qtYhAQnIwSE-unsplash.ff3d3d85.jpg\";","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport EventumIcon from \"../../assets/icons/eventumIcon.png\";\r\nimport {  useSelector } from \"react-redux\";\r\n\r\nconst { Header } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst Navbar = () => {\r\n  const activeuser = useSelector(state => state.userId);\r\n  return (\r\n    <Header\r\n      style={{\r\n        position: \"fixed\",\r\n        zIndex: 1,\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundImage: \"linear-gradient(to right, #0879FD , #31c8f8)\",\r\n      }}\r\n    >\r\n      <div className=\"logo\">\r\n        <NavLink activeClassName=\"active\" to=\"/home\">\r\n          {/* <Icon type=\"user\" style={{ fontSize: \"24px\", color: \"#fff\" }} />\r\n           */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <img\r\n              src={EventumIcon}\r\n              alt=\"Eventun Icon\"\r\n              style={{\r\n                height: \"50px\",\r\n              }}\r\n            />\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        // defaultSelectedKeys={[\"2\"]}\r\n        style={{\r\n          lineHeight: \"64px\",\r\n          background: \"transparent\",\r\n          fontWeight: \"bold\",\r\n          color: \"#fff\",\r\n        }}\r\n      >\r\n        <Menu.Item key=\"1\">\r\n          <NavLink activeClassName=\"active\" to=\"/searchEvents\">\r\n            Eventos\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <NavLink activeClassName=\"active\" to=\"/searchGroups\">\r\n            Grupos\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"user\" />\r\n              <span>Usuario</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item style={{ background: \"#31C8F8\" }} key=\"7\">\r\n            <NavLink activeClassName=\"active\" to=\"/signin\">\r\n              Cerrar Sesion\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item style={{ background: \"#31C8F8\" }} key=\"8\">\r\n            <NavLink activeClassName=\"active\" to={`/userProfile/` + activeuser}>\r\n              Mi perfil\r\n            </NavLink>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Navbar from './Navbar'\r\nexport default Navbar;","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout } from \"antd\";\r\nimport Navbar from \"../navbar\";\r\nimport \"./index.css\";\r\nimport EventumIcon from \"../../assets/icons/eventumIcon.png\";\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst MainLayout = (props) => {\r\n  return (\r\n    <Layout className=\"mainBackground\" style={{ minHeight: \"100vh\" }}>\r\n      <Navbar />\r\n      <div className=\"mainLayout\">{props.children}</div>\r\n      <Footer className=\"footer\">\r\n        <div>\r\n          <img src={EventumIcon} style={{ height: 100 }} />\r\n        </div>\r\n        Eventum - Software Architecture 2020-1\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n\r\n{\r\n  /* <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\r\n  <BreadCrumb />\r\n  <div className=\"mainLayout\">{props.children}</div>\r\n</Content>; */\r\n}\r\n","import MainLayout from './MainLayout'\r\nexport default MainLayout;","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Background from \"../../assets/backgrounds/Homebanner.png\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst HomeBanner = () => {\r\n  return (\r\n    <div>\r\n      <Layout\r\n        style={{\r\n          backgroundImage: \"url(\" + Background + \")\",\r\n          width: \"100%\",\r\n          height: \"600px\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          paddingTop: \"66,64%\",\r\n        }}\r\n      >\r\n        <Header></Header>\r\n        <Content>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"10%\",\r\n              fontSize: \"400%\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Bienvenido a Eventum\r\n          </p>\r\n          <p style={{ textAlign: \"center\", fontSize: \"200%\", color: \"white\" }}>\r\n            Encuentra toda la información que necesites sobre eventos y grupos\r\n            de la universidad\r\n          </p>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeBanner;\r\n","import HomeBanner from './homeBanner'\r\nexport default HomeBanner;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"./index.css\";\r\nimport {\r\n  EditOutlined,\r\n  EllipsisOutlined,\r\n  SettingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Avatar, Space, Card, Button } from \"antd\";\r\nconst { Meta } = Card;\r\nconst HomeEvents = (props) => {\r\n  return (\r\n    <>\r\n      <h1 style={{ fontSize: 35, textAlign: \"center\" }}>Eventos del dia</h1>\r\n      <List\r\n        pagination={{\r\n          onChange: (page) => {\r\n            console.log(page);\r\n          },\r\n          pageSize: 8,\r\n        }}\r\n        dataSource={props.data}\r\n        grid={{ gutter: 10, column: 4 }}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <Card\r\n              style={{ width: \"300px\" }}\r\n              cover={<img alt=\"example\" src={item.picture} />}\r\n            >\r\n              <Meta\r\n                title={<Link to={item.href}>{item.name}</Link>}\r\n                description={item.description}\r\n              />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeEvents;\r\n","import HomeEvents from './hEvent'\r\nexport default HomeEvents;\r\n","import MainLayout from \"./contentLayout\";\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst ContentLayout = (props) => {\r\n  return <div className=\"contentLayout\">{props.children}</div>;\r\n};\r\n\r\nexport default ContentLayout;\r\n","import Spinner from './Spinner';\r\nexport default Spinner","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\" style={{ height: \"100%\" }}>\r\n      <Spin size=\"small\" />\r\n      <Spin />\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport HomeBanner from '../../components/homeBanner'\r\nimport HomeEvents from '../../components/homeEvents'\r\nimport { Layout } from 'antd';\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport { Row, Col, Avatar } from 'antd';\r\nimport Spinner from \"../../components/spinner\";\r\nimport gql from 'graphql-tag';\r\nimport {  useQuery } from \"@apollo/react-hooks\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst GET_EVENTS = gql`\r\nquery {\r\n  allEvents{\r\n    id\r\n    name\r\n    description\r\n    url\r\n    photo\r\n  }\r\n}\r\n`;\r\n\r\nconst Home = () => {\r\n  // in home\r\n\r\n  //PRUEBA PARA eventos\r\n  const { loading, error, data } = useQuery(GET_EVENTS);\r\n  const evList = [];\r\n\r\n  if (!loading){\r\n    for (let i = 0; i < data.allEvents.length; i++) {\r\n      var photo = \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n      if (data.allEvents[i].photo!=null){\r\n        photo = data.allEvents[i].photo;\r\n      }\r\n      evList.push({\r\n        href: '/eventProfile/'+data.allEvents[i].id,\r\n        name: data.allEvents[i].name,\r\n        picture: photo,\r\n        description: data.allEvents[i].description,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HomeBanner/>\r\n      <div>\r\n        {loading && <Spinner />}\r\n        {!loading && (\r\n          <ContentLayout>\r\n            <HomeEvents data={evList} />\r\n          </ContentLayout>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from \"./home\";\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, Checkbox, Typography, Alert } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport EventumIcon from \"../../assets/icons/eventumIcon.png\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst SignInForm = (props) => {\r\n  const { onFinish, getFieldDecorator, error, pending } = props;\r\n\r\n  return (\r\n    <Form onFinish={onFinish} className=\"login-form\">\r\n      <div className=\"center-text\">\r\n        <img src={EventumIcon} style={{ height: 100 }} />\r\n        <Title level={2}>Inicia Sesión</Title>\r\n      </div>\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          { required: true, message: \"Por favor ingresa tu correo!\" },\r\n          {\r\n            type: \"email\",\r\n            message: \"Correo Electrónico no valido\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          placeholder=\"email\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          { required: true, message: \"Por favor ingresa tu contraseña!\" },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {error && (\r\n          <Alert\r\n            style={{ marginBottom: 20, marginTop: 20 }}\r\n            message={error}\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div className=\"login-form-button-container\">\r\n          {pending && <Spinner />}\r\n          {!pending && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Iniciar\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Form.Item>\r\n      <div className=\"center-text\">\r\n        No tienes cuenta? <Link to=\"/signup\">registrate ahora!</Link>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import WrappedSignInForm from \"./SignInForm\";\r\nexport default WrappedSignInForm;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SignInForm from \"../../components/signInForm\";\r\nimport \"./index.css\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  addUserId,\r\n  addAccessToken,\r\n  addRefreshToken,\r\n} from \"../../data/redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst SIGNIN_MUTATION = gql`\r\n  mutation LogUser($username: String!, $password: String!) {\r\n    logUser(input: { username: $username, password: $password }) {\r\n      refresh\r\n      access\r\n    }\r\n  }\r\n`;\r\nconst USERID_MUTATION = gql`\r\n  mutation VrfTok($token: String!) {\r\n    vrfTok(input: { token: $token })\r\n  }\r\n`;\r\n\r\nconst SignIn = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [signInMutation, { loading }] = useMutation(SIGNIN_MUTATION, {\r\n    errorPolicy: \"all\",\r\n  });\r\n  const [userIdMutation, { loadingUserMutation }] = useMutation(\r\n    USERID_MUTATION,\r\n    { errorPolicy: \"all\" }\r\n  );\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    try {\r\n      const { data } = await signInMutation({\r\n        variables: {\r\n          username: values.email,\r\n          password: values.password,\r\n        },\r\n      });\r\n\r\n      localStorage.setItem(\"access\", data.logUser.access);\r\n      localStorage.setItem(\"refresh\", data.logUser.refresh);\r\n\r\n      const idUser = await userIdMutation({\r\n        variables: {\r\n          token: data.logUser.access,\r\n        },\r\n      });\r\n      dispatch(addUserId(idUser.data.vrfTok));\r\n      dispatch(addAccessToken(data.logUser.access));\r\n      dispatch(addRefreshToken(data.logUser.refresh));\r\n      setSuccessful(true);\r\n    } catch (e) {\r\n      console.log({ e });\r\n      console.log(e.graphQLErrors); // Aqui estan los errores que mandamos, es una arreglo\r\n      const errorPromt = e.graphQLErrors[0].message.detail; // mensaje\r\n      // console.log(e.graphQLErrors[0].status); // status\r\n      setErrorMessage(errorPromt);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading && successful) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [successful]);\r\n\r\n  return (\r\n    <div className=\"centerSignIn\">\r\n      <SignInForm onFinish={onFinish} pending={loading} error={errorMessage} />\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;\r\n","import SignIn from './SignIn'\r\nexport default SignIn;","/*\r\n * action types\r\n */\r\n\r\nexport const ADD_ACCESS_TOKEN = 'ADD_ACCESS_TOKEN'\r\nexport const ADD_USER_ID = 'ADD_USER_ID'\r\nexport const ADD_REFRESH_TOKEN = 'ADD_REFRESH_TOKEN'\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function addUserId(id) {\r\n  return { type: ADD_USER_ID, userId: id };\r\n}\r\n\r\nexport function addAccessToken(access) {\r\n  return { type: ADD_ACCESS_TOKEN, access };\r\n}\r\n\r\nexport function addRefreshToken(refresh) {\r\n  return { type: ADD_REFRESH_TOKEN, refresh };\r\n}\r\n\r\n","const ipApi = '54.197.130.242'; // 190.24.19.228 o localhost\r\nconst portApi = '32670'; \r\n\r\n\r\nexport const ipApiGetway = `http://${ipApi}:${portApi}/graphql`;\r\n//export const ipLoadImages = 'http://190.24.19.228:5000/upload1';\r\nexport const ipLoadImages = `http://${ipApi}:${portApi}/upload1`;\r\n\r\n\r\n","import React, { useEffect , useState} from \"react\";\r\nimport {ipLoadImages} from '../../server'\r\n\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass PhotoLoader extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        loading: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n\r\n    this.props.onFinish(info.file.response);\r\n\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        \r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        });\r\n      });;\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n      <div>\r\n        <Upload\r\n          name=\"image\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={ipLoadImages}\r\n          beforeUpload={beforeUpload}\r\n          onChange={this.handleChange}\r\n          enctype=\"multipart/form-data\"\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"image\" style={{ width: '100%' }} /> : uploadButton}\r\n        </Upload>\r\n       \r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default PhotoLoader;\r\n","import PhotoLoader from './photoLoader'\r\nexport default PhotoLoader;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Form, Input, Row, Col, Select, Button, Typography, Alert } from \"antd\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport PhotoLoader from \"../photoLoader\";\r\nimport EventumIcon from \"../../assets/icons/eventumIcon.png\";\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nconst SignUpForm = (props) => {\r\n  const { handleSubmit, showModal, error, pending, useImageUrl } = props;\r\n  const [confirmDirty, setConfirmDirty] = useState(false);\r\n\r\n  const handleConfirmBlur = (e) => {\r\n    const { value } = e.target;\r\n    setConfirmDirty(confirmDirty || !!value);\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n    },\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item style={{ margin: \"0\" }} name=\"prefix\" noStyle>\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"01\">+01</Option>\r\n        <Option value=\"54\">+54</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form {...formItemLayout} onFinish={handleSubmit} className=\"login-form\">\r\n        <div className=\"center-text\">\r\n          <img src={EventumIcon} style={{ height: 100 }} />\r\n          <Title level={2}>Registrate</Title>\r\n        </div>\r\n        <Row type=\"\" justify=\"\" style={{ padding: \"0 100px\", margin: 0 }}>\r\n          <Col>\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              labelAlign=\"left\"\r\n              label=\"Nombre\"\r\n              style={{ margin: \"0\" }}\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Escribe un nombre valido\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              labelAlign=\"left\"\r\n              label=\"E-mail\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"Correo Electrónico no valido\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"Ingresa tu correo Electrónico\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              labelAlign=\"left\"\r\n              label=\"Contraseña\"\r\n              name=\"password\"\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Por favor ingresa una contraseña!\",\r\n                },\r\n                {\r\n                  min: 2,\r\n                  message: \"La contraseña debe tener por lo menos 2 caracteres\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              labelAlign=\"left\"\r\n              label=\"Confirmar Contraseña\"\r\n              name=\"confirmPassword\"\r\n              extra=\"Verifica tu Contraseña\"\r\n              ependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Por favor verifica tu contraseña!\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      \"Las contraseñas que ingresaste no son validas\"\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password onBlur={handleConfirmBlur} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              name=\"phone\"\r\n              label=\"Numero Celular\"\r\n              labelAlign=\"left\"\r\n              rules={[{message: \"Numero celular debe tener 10 caracteres\" , len:10}]}\r\n            >\r\n              <Input style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              label=\"Carrera\"\r\n              name=\"career\"\r\n              labelAlign=\"left\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Por favor pon tu carrera\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              label=\"Edad\"\r\n              labelAlign=\"left\"\r\n              name=\"age\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Por favor pon tu edad\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input type=\"Number\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row type=\"\" justify=\"center\">\r\n          <Col style={{ margin: 20 }}>\r\n            {error && (\r\n              <Alert\r\n                style={{ marginBottom: 20 }}\r\n                message={error}\r\n                type=\"error\"\r\n                showIcon\r\n              />\r\n            )}\r\n            {pending && <Spinner />}\r\n            <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n              <PhotoLoader onFinish={useImageUrl} />\r\n            </div>\r\n            <Form.Item\r\n              style={{ margin: \"0\" }}\r\n              className=\"center-text\"\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              {!pending && (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Register\r\n                </Button>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <div className=\"center-text\">\r\n              Ya tienes una cuenta? <Link to=\"/signin\">Inicia Sesión!</Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import WrappedSignUpForm from \"./SignUpForm\";\r\nexport default WrappedSignUpForm;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SignUpForm from \"../../components/signUpForm\";\r\nimport gql from 'graphql-tag';\r\nimport {  useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport \"./index.css\";\r\n\r\n\r\nconst SIGNUP_MUTATION = gql`\r\nmutation{\r\n  createImage(input:{profile:true, id_type:\"001\", path:\"$photo\"}){\r\n    _id\r\n    profile\r\n    id_type\r\n    id_event\r\n    path\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const history = useHistory();\r\n  // const dispatch = useDispatch();\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [photoPath, setPhotoPath] = useState(\"\");\r\n  const [signUpMutation, { loading}] = useMutation(SIGNUP_MUTATION, { errorPolicy: 'all' });\r\n\r\n  function succesfulMessage() {\r\n    Modal.success({\r\n      title: \"Usuario Registrado Exitosamente\",\r\n      okText: \"Cerrar\",\r\n      content: (\r\n        <div>\r\n          <p>\r\n            Bienvenido a Eventum , ha creado su cuenta satisfactoriamente.\r\n          </p>\r\n          <p>Ahora inice sesion </p>\r\n        </div>\r\n      ),\r\n      onOk() {\r\n        history.push(\"/signin\");\r\n      },\r\n    });\r\n  }\r\n\r\n  const useImageUrl = (photoUrl) => {\r\n    console.log(photoUrl);\r\n    setPhotoPath(photoUrl);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    console.log('Received values of form: ', values);\r\n\r\n    \r\n    try {\r\n      const {data} = await signUpMutation({ \r\n        variables: { \r\n          username: values.email,\r\n          password: values.password,\r\n          name: values.username,\r\n          phone_number: values.phone,\r\n          age: parseInt(values.age),\r\n          career: values.career,\r\n          photo: photoPath,\r\n        } \r\n      });\r\n\r\n      setSuccessful(true);\r\n    } catch(e){\r\n      console.log({e});\r\n      console.log(e.graphQLErrors); \r\n      const errorPromt = e.graphQLErrors[0].message.errors[0];\r\n      setErrorMessage(errorPromt);\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading && successful) {\r\n      succesfulMessage();\r\n    }\r\n  }, [successful]);\r\n\r\n  return (\r\n    <div className=\"centerSignUp\">\r\n      <SignUpForm handleSubmit={handleSubmit} pending={loading} error={errorMessage} useImageUrl={useImageUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import SignUp from './SignUp'\r\nexport default SignUp;","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Background from \"../../assets/backgrounds/priscilla-du-preez-XkKCui44iM0-unsplash.jpg\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst GroupsBanner = () => {\r\n  console.log(Background);\r\n  return (\r\n    <div>\r\n      <Layout\r\n        style={{\r\n          backgroundImage: \"url(\" + Background + \")\",\r\n          width: \"100%\",\r\n          height: \"600px\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          paddingTop: \"66,64%\",\r\n        }}\r\n      >\r\n        <Header></Header>\r\n        <Content>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"10%\",\r\n              fontSize: \"400%\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            La universidad cuenta con una gran cantidad de grupos\r\n          </p>\r\n          <p style={{ textAlign: \"center\", fontSize: \"200%\", color: \"white\" }}>\r\n            Busca un grupo por nombre o por categoría\r\n          </p>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupsBanner;\r\n","import GroupBanner from './groupBanner'\r\nexport default GroupBanner;","export default function containsSubStrings(container, contained){\r\n    var splitted = contained.toLowerCase().split(\" \");\r\n    var contains = true;\r\n    for(var index = 0; index < splitted.length; index++){\r\n        if(!container.toLowerCase().includes(splitted[index])){\r\n            contains = false;\r\n            break;\r\n        }\r\n    }\r\n    return contains;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport GroupsBanner from \"../../components/groupsBanner\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport containsSubStrings from \"../substrings.js\";\r\nimport { Layout } from \"antd\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  Avatar,\r\n  Space,\r\n  Alert,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { StarOutlined, ProfileOutlined } from \"@ant-design/icons\";\r\n\r\nconst GET_ALL_GROUPS_AND_TYPES = gql`\r\n  {\r\n    allGroups {\r\n      id_group\r\n      name\r\n      id_type\r\n      type\r\n      description\r\n      followers\r\n      photo\r\n    }\r\n    groupTypes {\r\n      id_type\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst { Title } = Typography;\r\n\r\nvar pickedCategory = 0;\r\nvar searchedGroups = [];\r\n\r\nconst Groups = () => {\r\n  const handleChange = (selectedOption) => {\r\n    pickedCategory = selectedOption;\r\n    console.log(`Option selected:`, pickedCategory);\r\n  };\r\n  const onFinish = async (values) => {\r\n    console.log(\r\n      \"se eligió la categoría \",\r\n      pickedCategory,\r\n      \", se eligió el nombre \",\r\n      values.search\r\n    );\r\n    searchedGroups = [];\r\n    for (var i = 0; i < data.allGroups.length; i++) {\r\n      if (pickedCategory == 0) {\r\n        if (typeof values.search === \"undefined\" || values.search == \"\") {\r\n          searchedGroups.push(data.allGroups[i]);\r\n        } else {\r\n          if (containsSubStrings(data.allGroups[i].name, values.search)) {\r\n            searchedGroups.push(data.allGroups[i]);\r\n          }\r\n        }\r\n      } else {\r\n        if (data.allGroups[i].id_type == pickedCategory) {\r\n          if (typeof values.search === \"undefined\" || values.search == \"\") {\r\n            searchedGroups.push(data.allGroups[i]);\r\n          } else {\r\n            if (containsSubStrings(data.allGroups[i].name, values.search)) {\r\n              searchedGroups.push(data.allGroups[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    changeGroupList(searchedGroups);\r\n    console.log(\"datos\", groupList);\r\n  };\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n  const [groupList, changeGroupList] = useState(searchedGroups);\r\n  const { loading, error, data } = useQuery(GET_ALL_GROUPS_AND_TYPES);\r\n\r\n  if (loading) return \"Loading...\";\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  var categories = [];\r\n  categories.push({ value: 0, label: \"Ninguno\" });\r\n  data.groupTypes.forEach((element) => {\r\n    categories.push({ value: element.id_type, label: element.name });\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <GroupsBanner />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 100,\r\n          padding: \"40px 10%\",\r\n          background: \"#fff\",\r\n        }}\r\n      >\r\n        <Form onFinish={onFinish}>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                labelAlign=\"left\"\r\n                label=\"Buscar\"\r\n                name=\"search\"\r\n                rules={[]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} style={{ margin: \" 0\" }}>\r\n              <Select\r\n                placeholder=\"Categorias\"\r\n                style={{ width: \"50%\", margin: \"0 5%\" }}\r\n                options={categories}\r\n                onChange={handleChange}\r\n              />\r\n              <Button type=\"primary\" style={{ width: \"30%\" }} htmlType=\"submit\">\r\n                Buscar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div>\r\n        <ContentLayout>\r\n          <div className=\"center-text\">\r\n            <Title level={2}>Busqueda de Grupos</Title>\r\n          </div>\r\n          <Row>\r\n            <div className=\"commentsBox\">\r\n              <List\r\n                header={<div className=\"header\">Grupos</div>}\r\n                itemLayout=\"vertical\"\r\n                size=\"medium\"\r\n                width=\"100%\"\r\n                pagination={{\r\n                  onChange: (page) => {\r\n                    console.log(page);\r\n                  },\r\n                  pageSize: 5,\r\n                }}\r\n                dataSource={groupList}\r\n                renderItem={(item) => (\r\n                  <List.Item\r\n                    key={item.name}\r\n                    actions={[\r\n                      <IconText\r\n                        icon={StarOutlined}\r\n                        text={item.followers}\r\n                        key=\"list-vertical-star-o\"\r\n                      />,\r\n                    ]}\r\n                    //imagen del grupo\r\n                    extra={\r\n                      <img\r\n                        width={272}\r\n                        alt=\"logo\"\r\n                        src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                        // src={item.photo}\r\n                      />\r\n                    }\r\n                  >\r\n                    <List.Item.Meta\r\n                      title={\r\n                        <Link to={\"/groupProfile/\" + item.id_group}>\r\n                          {item.name}\r\n                        </Link>\r\n                      }\r\n                      description={item.type}\r\n                    />\r\n                    {item.description}\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </div>\r\n          </Row>\r\n        </ContentLayout>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import Groups from \"./groups\";\r\nexport default Groups;","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Background from \"../../assets/backgrounds/teemu-paananen-bzdhc5b3Bxs-unsplash.jpg\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst EventsBanner = () => {\r\n  console.log(Background);\r\n  return (\r\n    <div>\r\n      <Layout\r\n        style={{\r\n          backgroundImage: \"url(\" + Background + \")\",\r\n          width: \"100%\",\r\n          height: \"500px\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          paddingTop: \"66,64%\",\r\n        }}\r\n      >\r\n        <Header></Header>\r\n        <Content>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"10%\",\r\n              fontSize: \"400%\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Conoce nuevos eventos o busca alguno según tus preferencias\r\n          </p>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsBanner;\r\n","import EventsBanner from \"./eventsBanner\";\r\nexport default EventsBanner;","import React, { useEffect, useState } from \"react\";\r\nimport EventsBanner from \"../../components/eventsBanner\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport containsSubStrings from \"../substrings.js\";\r\nimport { Layout } from \"antd\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  Avatar,\r\n  Card,\r\n  Space,\r\n  Alert,\r\n} from \"antd\";\r\nimport gql from \"graphql-tag\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  EditOutlined,\r\n  EllipsisOutlined,\r\n  SettingOutlined,\r\n  StarOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst GET_ALL_EVENTS = gql`\r\n  {\r\n    allEvents {\r\n      id\r\n      status\r\n      name\r\n      description\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nconst { Title } = Typography;\r\n\r\nvar pickedStatus = \"\";\r\nvar searchedEvents = [];\r\nvar states = [\r\n  { value: \"\", label: \"ninguno\" },\r\n  { value: \"active\", label: \"activo\" },\r\n];\r\n\r\nconst Events = () => {\r\n  const handleChange = (selectedOption) => {\r\n    pickedStatus = selectedOption;\r\n    console.log(`Option selected:`, pickedStatus);\r\n  };\r\n  const onFinish = async (values) => {\r\n    console.log(\r\n      \"se eligió el status \",\r\n      pickedStatus,\r\n      \", se eligió el nombre \",\r\n      values.search\r\n    );\r\n    searchedEvents = [];\r\n    for (var i = 0; i < data.allEvents.length; i++) {\r\n      if (pickedStatus == 0) {\r\n        if (typeof values.search === \"undefined\" || values.search == \"\") {\r\n          searchedEvents.push(data.allEvents[i]);\r\n        } else {\r\n          if (containsSubStrings(data.allEvents[i].name, values.search)) {\r\n            searchedEvents.push(data.allEvents[i]);\r\n          }\r\n        }\r\n      } else {\r\n        if (data.allEvents[i].status == pickedStatus) {\r\n          if (typeof values.search === \"undefined\" || values.search == \"\") {\r\n            searchedEvents.push(data.allEvents[i]);\r\n          } else {\r\n            if (containsSubStrings(data.allEvents[i].name, values.search)) {\r\n              searchedEvents.push(data.allEvents[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    changeEventList(searchedEvents);\r\n    console.log(\"datos\", eventList);\r\n  };\r\n\r\n  const [eventList, changeEventList] = useState(searchedEvents);\r\n  const { loading, error, data } = useQuery(GET_ALL_EVENTS);\r\n\r\n  if (loading) {\r\n    return \"Loading...\";\r\n  }\r\n  if (error) {\r\n    return `Error! ${error.message}`;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <EventsBanner />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 100,\r\n          padding: \"40px 10%\",\r\n          background: \"#fff\",\r\n        }}\r\n      >\r\n        <Form onFinish={onFinish}>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                labelAlign=\"left\"\r\n                label=\"Search\"\r\n                name=\"search\"\r\n                rules={[]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} style={{ margin: \" 0\" }}>\r\n              <Select\r\n                style={{ width: \"50%\", margin: \"0 5%\" }}\r\n                options={states}\r\n                onChange={handleChange}\r\n              />\r\n              <Button type=\"primary\" style={{ width: \"30%\" }} htmlType=\"submit\">\r\n                Buscar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div>\r\n        <ContentLayout>\r\n          <div className=\"center-text\">\r\n            <Title level={2}>Buscar Evento</Title>\r\n          </div>\r\n          <Row>\r\n            <List\r\n              style={{ width: \"100%\" }}\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 8,\r\n              }}\r\n              dataSource={eventList}\r\n              grid={{ gutter: 10, column: 4 }}\r\n              renderItem={(item) => (\r\n                <List.Item>\r\n                  <Card\r\n                    style={{ width: \"300px\" }}\r\n                    cover={\r\n                      <img\r\n                        alt=\"example\"\r\n                        src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                        //src={item.photo}\r\n                      />\r\n                    }\r\n                    actions={[\r\n                      <SettingOutlined key=\"setting\" />,\r\n                      <EditOutlined key=\"edit\" />,\r\n                      <EllipsisOutlined key=\"ellipsis\" />,\r\n                    ]}\r\n                  >\r\n                    <Meta\r\n                      avatar={\r\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                      }\r\n                      title={\r\n                        <Link to={\"/eventProfile/\" + item.id}>{item.name}</Link>\r\n                      }\r\n                      description={item.description}\r\n                    />\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Row>\r\n        </ContentLayout>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import Events from \"./events\";\r\nexport default Events;","import GroupCard from './groupCard'\r\nexport default GroupCard;","import React from 'react'\r\nimport { Card,  Switch  } from 'antd';\r\nimport { StarOutlined, CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\n\r\nconst EventCard = (props) => {\r\n  const { type, name, description, created_date, contact_number, followers} = props;\r\n  return (\r\n    <Card title={name}\r\n      style={{ width: '100%' }}\r\n      actions={[\r\n        <StarOutlined key={followers} />,\r\n      ]}\r\n      >\r\n      <p>{type}</p>\r\n      <p>{description}</p>\r\n      <p>Creado en: {created_date}</p>\r\n      <p>Para más información llamar a: {contact_number}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EventCard","\r\nimport React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { OmitProps } from \"antd/lib/transfer/renderListBody\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst EventBanner= (props) => {\r\n  return (\r\n    <div  >\r\n      <Layout\r\n        style={{\r\n                backgroundImage: \"url(\"+props.photo+\")\",\r\n                width: \"100%\",\r\n                height:\"400px\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                paddingTop: \"66,64%\",\r\n                backgroundColor: \"black\",\r\n                backgroundBlendMode: \"hard-light\"  }}>\r\n        <Header></Header>\r\n        <Content>\r\n              <p style={{textAlign:\"center\",\r\n                      marginTop: \"10%\",\r\n                      fontSize: \"400%\",\r\n                      color: \"white\",\r\n                      fontWeight: \"bold\"}}>{props.name}</p>\r\n\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default EventBanner;\r\n","import GroupBanner from './groupBanner'\r\nexport default GroupBanner;","import AssistList from \"./aList\";\r\nexport default AssistList;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { List, message, Avatar, Spin } from \"antd\";\r\nimport reqwest from \"reqwest\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AssistList extends React.Component {\r\n  state = {\r\n    data: this.props.data,\r\n    loading: false,\r\n    hasMore: true,\r\n  };\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let { data } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 14) {\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    this.fetchData((res) => {\r\n      data = data.concat(res.results);\r\n      this.setState({\r\n        data,\r\n        loading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"demo-infinite-container\">\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={this.handleInfiniteOnLoad}\r\n          hasMore={!this.state.loading && this.state.hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            header={<div className=\"header\">Administradores</div>}\r\n            dataSource={this.state.data}\r\n            renderItem={(item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src={item.photo} />}\r\n                  title={<Link to={item.href}>{item.name}</Link>}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          >\r\n            {this.state.loading && this.state.hasMore && (\r\n              <div className=\"demo-loading-container\">\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssistList;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"./index.css\";\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport { List, Avatar, Space,Card , Button} from 'antd';\r\nconst { Meta } = Card;\r\nconst EventsList = (props) => {\r\n\r\n  return (\r\n    <Card title=\"Eventos del grupo\"\r\n      style={{ width: '100%' }}>\r\n      <List\r\n          pagination={{\r\n            onChange: page => {\r\n              console.log(page);\r\n            },\r\n            pageSize: 8,\r\n          }}\r\n          dataSource={props.data}\r\n          grid={{\r\n                gutter: 10,\r\n              }}\r\n          renderItem={item => (\r\n            <List.Item>\r\n            <Card\r\n                style={{ width: \"300px\" }}\r\n                cover={\r\n                  <img\r\n                    alt=\"example\"\r\n                    src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                    //src={item.photo}\r\n                  />\r\n                }\r\n                actions={[\r\n                  <SettingOutlined key=\"setting\" />,\r\n                  <EditOutlined key=\"edit\" />,\r\n                  <EllipsisOutlined key=\"ellipsis\" />,\r\n                ]}\r\n              >\r\n                <Meta\r\n                  avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                  title={item.name}\r\n                  description={item.status}\r\n                />\r\n                {item.description}\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default EventsList;\r\n","import EventsList from './eList'\r\nexport default EventsList;","import React from \"react\";\r\nimport GroupCard from \"../../components/groupCard\";\r\nimport GroupBanner from '../../components/groupBanner'\r\nimport AssistList from \"../../components/adminList\";\r\nimport EventsList from \"../../components/eventList\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport { Layout } from 'antd';\r\nimport { Row, Col, Avatar } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport {useQuery} from \"@apollo/react-hooks\";\r\n\r\n\r\n//GRAPHQL\r\n\r\nconst GROUP_PROFILE_QUERY = gql`\r\nquery eProfile($id: ID!){\r\n  groupProfile(id: $id) {\r\n    type\r\n    name\r\n    description\r\n    created_date\r\n    contact_number\r\n    followers\r\n    events{\r\n      id\r\n      status\r\n      name\r\n      description\r\n      photo\r\n    }\r\n    admins{\r\n      id\r\n      name\r\n    }\r\n    photo\r\n  }\r\n}\r\n`;\r\n\r\nconst GroupProfile = (props) => {\r\n  const {id} = props.match.params;\r\n  console.log(\"iden \", id);\r\n  const { loading, error, data } = useQuery(GROUP_PROFILE_QUERY, {\r\n    variables: {\r\n      id: id,\r\n    }\r\n  });\r\n\r\n  if (loading) {return 'Loading...';}\r\n  if (error) {return `Error! ${error.message}`;}\r\n\r\n  var aList = data.groupProfile.admins;\r\n\r\n  var grPhoto = \"https://source.unsplash.com/random\"\r\n  if (!loading){\r\n    if(data.groupProfile.photo!=null){\r\n      grPhoto = data.groupProfile.photo;\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <React.Fragment>\r\n        <GroupBanner name= {data.groupProfile.name} photo={grPhoto}/>\r\n        <ContentLayout>\r\n          <Row>\r\n            <GroupCard type={data.groupProfile.type} name={data.groupProfile.name} description={data.groupProfile.description} created_date={data.groupProfile.created_date} contact_number={data.groupProfile.contact_number} followers={data.groupProfile.followers}></GroupCard>\r\n          </Row>\r\n          <Row>\r\n            <Col flex={10}>\r\n              <EventsList data={data.groupProfile.events}/>\r\n            </Col>\r\n            <Col flex={2}>\r\n              <AssistList data={aList}/>\r\n            </Col>\r\n          </Row>\r\n        </ContentLayout>\r\n      </React.Fragment>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default GroupProfile;\r\n","import GroupProfile from \"./groupProf\";\r\nexport default GroupProfile;","import EventMap from './map';\r\nexport default EventMap;\r\n","import React, { Component } from 'react';\r\nimport MarkersOnMap from 'markers-on-map-react';\r\n\r\n// Any component you need to use\r\nclass EventMap extends Component {\r\n\r\n\r\n  // Any lifecycle method you need to use\r\n  componentDidMount() {\r\n    const lat=this.props.lat;\r\n    const lng=this.props.lng;\r\n    // Basic initialize\r\n    MarkersOnMap.Init({\r\n      mapWidth: '100%',\r\n      mapHeight: '500px',\r\n      mapBackgroundColor: '#f8f8f8',\r\n      mapCenterLat: lat,\r\n      mapCenterLong: lng,\r\n      mapMinZoom: 2,\r\n      mapZoomLevel: 12,\r\n      mapMaxZoom: 15,\r\n      googleApiKey: \"AIzaSyBTOLA6Homuc7zsVibRBxeKlGcZO3IZF7o\", // required => Google Maps JavaScript API Key (in string format)\r\n\r\n      markerObjects: [\r\n        // at least one object required\r\n        {\r\n          markerLat: lat, // marker latitude as number\r\n          markerLong: lng, // marker longitude as number\r\n        },\r\n      ],\r\n    });\r\n\r\n    // Select map element (ID or Class)\r\n    MarkersOnMap.Run('div#GoogleMap');\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      // Map element\r\n      <div id=\"GoogleMap\"></div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default EventMap;\r\n","import React, { useEffect , useState} from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Card,  Button  } from 'antd';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport gql from 'graphql-tag';\r\nconst CREATE_ASSIST_MUTATION = gql`\r\nmutation AssistMutation(\r\n  $user_id: Int!\r\n  $event_id: Int!\r\n){\r\n  addUserEvent(input:{\r\n      user_id: $user_id\r\n      event_id: $event_id\r\n      assistance: true\r\n      interested: false\r\n    }) {\r\n    message\r\n  }\r\n}\r\n`;\r\nconst DELETE_ASSIST_MUTATION = gql`\r\nmutation delAssistMutation(\r\n  $userId: Int!\r\n  $eventId: Int!\r\n){\r\n  deleteUserEvent(\r\n      userId: $userId\r\n      eventId: $eventId\r\n    ) {\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n/*async function ChangeAssist(asist, actUser, eventID) {\r\n  const [assistMutation, { loading}] = useMutation(CREATE_ASSIST_MUTATION, { errorPolicy: 'all' });\r\n  const [assistDeleteMutation, { loading1}] = useMutation(DELETE_ASSIST_MUTATION, { errorPolicy: 'all' });\r\n  if (!asist){\r\n    const {data} = await assistMutation({\r\n      variables: {\r\n        user_id: actUser,\r\n        event_id: eventID,\r\n        assistance: true,\r\n        interested: false,\r\n      }\r\n    });\r\n  }\r\n  else{\r\n    const {data} = await assistMutation({\r\n      variables: {\r\n        userId actUser,\r\n        eventId: eventID,\r\n      }\r\n    });\r\n  }\r\n  return null\r\n}*/\r\n\r\nconst EventCard = (props) => {\r\n  const history = useHistory();\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const { name, description, start, finish,asist, actUser, eventID } = props;\r\n  const [onAsistHandler, { loading, error }] = useMutation(CREATE_ASSIST_MUTATION, { errorPolicy: 'all' })\r\n  const [onAsistHandler2, { data2, loading2, error2 }] = useMutation(DELETE_ASSIST_MUTATION, { errorPolicy: 'all' })\r\n  const val={\r\n    actUser: actUser,\r\n    eventID: parseInt(eventID),\r\n  }\r\n\r\n  const asistButton = async values => {\r\n    try {\r\n      const {data} = await onAsistHandler({\r\n        variables: {\r\n          user_id: values.actUser,\r\n          event_id: values.eventID,\r\n        }\r\n      });\r\n    } catch(e){\r\n      console.log({e});\r\n      console.log(e.graphQLErrors); // Aqui estan los errores que mandamos, es una arreglo\r\n      const errorPromt = e.graphQLErrors[0].message.detail; // mensaje\r\n      // console.log(e.graphQLErrors[0].status); // status\r\n      setErrorMessage(errorPromt);\r\n    }\r\n  }\r\n  const deleteButton = async values => {\r\n\r\n    try {\r\n      const {data2} = await onAsistHandler2({\r\n        variables: {\r\n          userId: values.actUser,\r\n          eventId: values.eventID,\r\n        }\r\n      });\r\n    } catch(e){\r\n      console.log({e});\r\n      console.log(e.graphQLErrors); // Aqui estan los errores que mandamos, es una arreglo\r\n      const errorPromt = e.graphQLErrors[0].message.detail; // mensaje\r\n      // console.log(e.graphQLErrors[0].status); // status\r\n      setErrorMessage(errorPromt);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      console.log(\"AFTER IRE\");\r\n      \r\n      props.refetchProfile();\r\n    }\r\n  },);\r\n\r\n  // <button onClick={(e) => {this.validateNote(); this.props.history.push(`/board/${this.props.match.params.user}`);}}>\r\n  //href={'/eventProfile/'+eventID}\r\n  return (\r\n    <Card title={name}\r\n      style={{ width: '100%' }}\r\n      extra={\r\n        <div>\r\n        <Button type=\"primary\" disabled={asist} loading={loading} onClick={()=> asistButton(val)} >\r\n          Iré\r\n        </Button>\r\n        <Button disabled={!asist} loading={loading2} onClick={(e)=> {deleteButton(val)}}>\r\n          No iré\r\n        </Button>\r\n        </div>\r\n      }\r\n      >\r\n      <p>{description}</p>\r\n      <p>Empieza: {start}</p>\r\n      <p>Termina: {finish}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EventCard","import EventCard from \"./evCard\";\r\nexport default EventCard;\r\n","import React, { useEffect , useState} from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { List, Avatar, Space , Form, Input, Alert, Button} from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined ,DislikeOutlined } from '@ant-design/icons';\r\nimport \"./index.css\";\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport gql from 'graphql-tag';\r\nimport Spinner from \"../../components/spinner\";\r\nconst CREATE_COMMENT_MUTATION = gql`\r\nmutation CommentMutation(\r\n  $idUser: Int!\r\n  $idEvent: Int!\r\n  $text: String!\r\n  $name: String!\r\n){\r\n  addComment(input:{\r\n\t\t\tidUser: $idUser,\r\n    \tidEvent: $idEvent,\r\n    \ttext: $text,\r\n    \tname: $name,\r\n    }) {\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\n\r\n////////////////////\r\nconst EventComments = (props) => {\r\n  const history = useHistory();\r\n  const commentList = props.data;\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [onAsistHandler, { loading, error }] = useMutation(CREATE_COMMENT_MUTATION, { errorPolicy: 'all' })\r\n  const [form] = Form.useForm();\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n  const onFinish = async values => {\r\n    try {\r\n      const {data} = await onAsistHandler({\r\n        variables: {\r\n          idUser: props.idu,\r\n          idEvent: parseInt(props.ide),\r\n          text: values.comment,\r\n          name: props.name,\r\n        }\r\n      });\r\n      form.resetFields();\r\n      //setSuccessful(true);\r\n    } catch(e){\r\n      console.log({e});\r\n      console.log(e.graphQLErrors); // Aqui estan los errores que mandamos, es una arreglo\r\n      // const errorPromt = e.graphQLErrors[0].message.detail; // mensaje\r\n      // console.log(e.graphQLErrors[0].status); // status\r\n      // setErrorMessage(errorPromt);\r\n    }\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (!loading ) {\r\n      props.refetchProfile();\r\n    }\r\n  }, );\r\n\r\n\r\n  return (\r\n    <div className=\"commentsBox\">\r\n      <List\r\n      header={<div className=\"header\">Comentarios</div>}\r\n      itemLayout=\"horizontal\"\r\n      size=\"small\"\r\n      width= \"100%\"\r\n      dataSource={commentList}\r\n      renderItem={item => (\r\n        <List.Item\r\n          key={item.name}\r\n          actions={[\r\n            <IconText icon={LikeOutlined} text={item.likes} key=\"list-vertical-like-o\" />,\r\n            <IconText icon={DislikeOutlined} text={item.dislikes} key=\"list-vertical-dislike-o\" />,\r\n          ]}\r\n        >\r\n          <List.Item.Meta\r\n            \r\n            title={<a href={item.href}>{item.name}</a>}\r\n          />\r\n          {item.text}\r\n        </List.Item>\r\n      )}/>\r\n      <Form\r\n        form={form}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"comment\"\r\n          rules={[\r\n            { required: true, message: \"Vacío\" },\r\n          ]}\r\n        >\r\n          <Input\r\n            allowClear\r\n            placeholder=\"Comentario\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {error && (\r\n            <Alert\r\n              style={{ marginBottom: 20, marginTop: 20 }}\r\n              message={error}\r\n              type=\"error\"\r\n              showIcon\r\n            />\r\n          )}\r\n          <div>\r\n            {loading && <Spinner />}\r\n            {!loading && (\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                Comentar\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventComments\r\n","import EventComments from './eComments';\r\nexport default EventComments;\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst EventBanner= (props) => {\r\n  //const b=props.photo\r\n  //console.log(\"../../assets/backgrounds/ben-duchac-96DW4Pow3qI-unsplash.jpg\")\r\n  return (\r\n    <div  >\r\n      <Layout\r\n        style={{\r\n                backgroundImage: \"url(\"+props.photo+\")\",\r\n                width: \"100%\",\r\n                height:\"400px\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                paddingTop: \"66,64%\",\r\n                backgroundColor: \"black\",\r\n                backgroundBlendMode: \"hard-light\"  }}>\r\n        <Header></Header>\r\n        <Content>\r\n              <p style={{textAlign:\"center\",\r\n                      marginTop: \"10%\",\r\n                      fontSize: \"400%\",\r\n                      color: \"white\",\r\n                      fontWeight: \"bold\"}}>{props.name}</p>\r\n\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default EventBanner;\r\n","import EventBanner from './eventBanner'\r\nexport default EventBanner;\r\n","import AssistList from \"./aList\";\r\nexport default AssistList;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { List, message, Avatar, Spin } from \"antd\";\r\nimport reqwest from \"reqwest\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nconst AssistList = (props) => {\r\n\r\n  const data = props.data\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const handleInfiniteOnLoad = () => {\r\n    setLoading(true);\r\n    if (data.length > 14) {\r\n      setLoading(false);\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"demo-infinite-container\">\r\n      <InfiniteScroll\r\n        initialLoad={false}\r\n        pageStart={0}\r\n        loadMore={handleInfiniteOnLoad}\r\n        hasMore={!loading && hasMore}\r\n        useWindow={false}\r\n      >\r\n        <List\r\n          header={<div className=\"header\">Asistentes</div>}\r\n          dataSource={data}\r\n          renderItem={(item) => (\r\n            <List.Item key={item.id}>\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={item.avatar} />}\r\n                title={<Link to={item.href}>{item.name}</Link>}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        >\r\n          {loading && hasMore && (\r\n            <div className=\"demo-loading-container\">\r\n              <Spin />\r\n            </div>\r\n          )}\r\n        </List>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssistList;\r\n","import React from \"react\";\r\nimport EventMap from \"../../components/map\";\r\nimport EventCard from \"../../components/eventCard\";\r\nimport EventComments from \"../../components/eventComments\";\r\nimport EventBanner from \"../../components/eventBanner\";\r\nimport AssistList from \"../../components/assistList\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport { Layout } from \"antd\";\r\nimport { Row, Col, Avatar } from \"antd\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//updateUserEvent(userId: Int, eventId: Int, input: UserEventInputUpdate): Message!\r\n//deleteUserEvent(userId: Int, eventId: Int): Message!\r\n//GRAPHQL\r\n\r\nconst EVENT_PROFILE_QUERY = gql`\r\n  query eProfile($eventId: ID!, $userId: ID!) {\r\n    eventProfile(eventId: $eventId, userId: $userId) {\r\n      name\r\n      photo\r\n      description\r\n      eventStartDate\r\n      eventFinishDate\r\n      latitude\r\n      longitude\r\n      comments {\r\n        text\r\n        likes\r\n        dislikes\r\n        name\r\n        idUser\r\n      }\r\n      assistant {\r\n        id\r\n        name\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GET_USER_NAME = gql`\r\n  query getUserProfile($userId: Int!) {\r\n    userProfile(userId: $userId) {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n//https://source.unsplash.com/random\r\nconst EventProfile = ({ match }) => {\r\n  const evId = match.params.id;\r\n  const activeuser = parseInt(useSelector(state => state.userId));\r\n  console.log(activeuser)\r\n\r\n  const { loading, error, data , refetch} = useQuery(EVENT_PROFILE_QUERY, {\r\n    variables: {\r\n      eventId: evId,\r\n      userId: activeuser,\r\n    },\r\n  });\r\n\r\n  const { data: data2, error: error2, loading: loading2 } = useQuery(\r\n    GET_USER_NAME,\r\n    {\r\n      variables: {\r\n        userId: activeuser,\r\n      },\r\n    }\r\n  );\r\n\r\n  var evAsist = false;\r\n  var load = true;\r\n  if (!loading && !loading2) {\r\n    load = false;\r\n  }\r\n  var evPhoto = \"https://source.unsplash.com/random\";\r\n  if (!load) {\r\n    if (data.eventProfile.photo != null) {\r\n      evPhoto = data.eventProfile.photo;\r\n    }\r\n  }\r\n\r\n  //PRUEBA PARA ASISTENTES\r\n  const aList = [];\r\n  const idAList = [];\r\n  if (!load) {\r\n    console.log(data);\r\n    for (let i = 0; i < data.eventProfile.assistant.length; i++) {\r\n      var photo =\r\n        \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\";\r\n      if (data.eventProfile.assistant[i].photo != null) {\r\n        photo = data.eventProfile.assistant[i].photo;\r\n      }\r\n      console.log(data.eventProfile.assistant[i].photo);\r\n      idAList.push(parseInt(data.eventProfile.assistant[i].id));\r\n      aList.push({\r\n        href: \"/userProfile/\" + data.eventProfile.assistant[i].id,\r\n        name: data.eventProfile.assistant[i].name,\r\n        avatar: photo,\r\n      });\r\n      console.log(aList);\r\n      \r\n    }\r\n  }\r\n  if (!load) {\r\n    evAsist = idAList.includes(activeuser);\r\n  }\r\n  //PRUEBA PARA COMENTARIOS\r\n  const commentList = [];\r\n  if (!loading) {\r\n    for (let i = 0; i < data.eventProfile.comments.length; i++) {\r\n      commentList.push({\r\n        href: \"/userProfile/\" + data.eventProfile.comments[i].idUser,\r\n        name: data.eventProfile.comments[i].name,\r\n        text: data.eventProfile.comments[i].text,\r\n        likes: data.eventProfile.comments[i].likes,\r\n        dislikes: data.eventProfile.comments[i].dislikes,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  const refetchProfile = () => {\r\n    refetch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {load && <Spinner />}\r\n      {!load && (\r\n        <React.Fragment>\r\n          <EventBanner name={data.eventProfile.name} photo={evPhoto} />\r\n\r\n          <ContentLayout>\r\n            <Row>\r\n              <EventCard\r\n                name={data.eventProfile.name}\r\n                description={data.eventProfile.description}\r\n                start={data.eventProfile.eventStartDate}\r\n                finish={data.eventProfile.eventFinishDate}\r\n                asist={evAsist}\r\n                actUser={activeuser}\r\n                eventID={evId}\r\n                refetchProfile={refetchProfile}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Col flex={10}>\r\n                <EventMap\r\n                  lat={parseFloat(data.eventProfile.latitude)}\r\n                  lng={parseFloat(data.eventProfile.longitude)}\r\n                />\r\n              </Col>\r\n              <Col flex={2}>\r\n                <AssistList \r\n                  data={aList} \r\n                  />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <EventComments\r\n                name={data2.userProfile.name}\r\n                idu={activeuser}\r\n                data={commentList}\r\n                ide={evId}\r\n                pending={loading}\r\n                refetchProfile={refetchProfile}\r\n              />\r\n            </Row>\r\n          </ContentLayout>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventProfile;\r\n","import EventProfile from \"./eventProf\";\r\nexport default EventProfile;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"./index.css\";\r\nimport { Card } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\nconst UserHeader = (props) => {\r\n  return (\r\n    <Card\r\n      style={{ width: \"100%\", background: \"transparent\" }}\r\n      cover={\r\n        <div className=\"landscape\">\r\n          <img\r\n            className=\"center\"\r\n            alt=\"picture\"\r\n            src={props.photo}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <Meta title={props.name} style={{ textAlign: \"center\", fontSize: 40 }} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserHeader;\r\n","import UserHeader from './userHeader'\r\nexport default UserHeader;\r\n","import UserInfo from './uInfo'\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"./index.css\";\r\nimport { Card, Descriptions } from \"antd\";\r\nimport picture from \"../../assets/backgrounds/william-recinos-qtYhAQnIwSE-unsplash.jpg\";\r\n\r\nconst { Meta } = Card;\r\nconst UserInfo = (props) => {\r\n  const { name, phone, age, career } = props;\r\n  return (\r\n    // <Card title=\"Información del usuario\" style={{ width: \"100%\" }}>\r\n    //   <p>Nombre: {name}</p>\r\n    //   <p>Teléfono: {phone}</p>\r\n    //   <p>Edad: {age} años</p>\r\n    //   <p>Carrera: {career}</p>\r\n    // </Card>\r\n    <Descriptions bordered style={{ width: \"100%\", marginBottom: 20 }}>\r\n      <Descriptions.Item span={3} label=\"Nombre\">\r\n        {name}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item span={3} label=\"Telefono\">\r\n        {phone}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item span={3} label=\"Edad\">\r\n        {age}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item span={3} label=\"Carrera\">\r\n        {career}\r\n      </Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"./index.css\";\r\nimport {\r\n  EditOutlined,\r\n  EllipsisOutlined,\r\n  SettingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { List, Avatar, Space, Card, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\nconst EventoUsuario = (props) => {\r\n  const isActiveUser = props.isActiveUser;\r\n  return (\r\n    <Card\r\n      title=\"Mis Eventos\"\r\n      style={{ width: \"100%\" }}\r\n      extra={\r\n        <div>\r\n          {isActiveUser && <Link to=\"/createEvent\">\r\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n          </Link>}\r\n        </div>\r\n      }\r\n    >\r\n      <List\r\n        pagination={{\r\n          onChange: (page) => {\r\n            console.log(page);\r\n          },\r\n          pageSize: 8,\r\n        }}\r\n        dataSource={props.data}\r\n        grid={{\r\n          gutter: 10,\r\n        }}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <Card\r\n              style={{ width: \"300px\" }}\r\n              cover={<img alt=\"example\" src={item.picture} />}\r\n              actions={[\r\n                <SettingOutlined key=\"setting\" />,\r\n                <EditOutlined key=\"edit\" />,\r\n                <EllipsisOutlined key=\"ellipsis\" />,\r\n              ]}\r\n            >\r\n              <Meta\r\n                title={<Link to={item.href}>{item.name}</Link>}\r\n                description={item.description}\r\n              />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EventoUsuario;\r\n","import EventoUsuario from './evUsuario'\r\nexport default EventoUsuario;\r\n","import GrupoUsuario from './grUsuario'\r\nexport default GrupoUsuario;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"./index.css\";\r\nimport {\r\n  EditOutlined,\r\n  EllipsisOutlined,\r\n  SettingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { List, Avatar, Space, Card, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\nconst GrupoUsuario = (props) => {\r\n  const isActiveUser = props.isActiveUser;\r\n  return (\r\n    <Card\r\n      title=\"Mis Grupos\"\r\n      style={{ width: \"100%\" }}\r\n      extra={\r\n        <div>\r\n          {isActiveUser && <Link to=\"/createGroup\">\r\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n          </Link>\r\n          }\r\n        </div>\r\n      }\r\n    >\r\n      <List\r\n        itemLayout=\"vertical\"\r\n        size=\"large\"\r\n        pagination={{\r\n          onChange: (page) => {\r\n            console.log(page);\r\n          },\r\n          pageSize: 3,\r\n        }}\r\n        dataSource={props.data}\r\n        renderItem={(item) => (\r\n          <List.Item\r\n            key={item.name}\r\n            extra={<img width={272} alt=\"logo\" src={item.picture} />}\r\n          >\r\n            <List.Item.Meta title={<Link to={item.href}>{item.name}</Link>} />\r\n            {item.description}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GrupoUsuario;\r\n","import React, {useEffect}from \"react\";\r\nimport EventMap from \"../../components/map\";\r\nimport UserHeader from \"../../components/userHeader\";\r\nimport UserInfo from \"../../components/userInfo\";\r\nimport EventoUsuario from \"../../components/eventosUsuario\";\r\nimport GrupoUsuario from \"../../components/gruposUsuario\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport { Row, Col, Avatar } from \"antd\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport \"./index.css\";\r\nimport {  useSelector } from \"react-redux\";\r\n\r\n//GRAPHQL\r\nconst GET_USER_PROFILE = gql`\r\n  query getUserProfile($userId: Int!) {\r\n    userProfile(userId: $userId) {\r\n      id\r\n      name\r\n      career\r\n      age\r\n      phone_number\r\n      photo\r\n      groupsFollowing {\r\n        id_group\r\n        id_type\r\n        type\r\n        name\r\n        description\r\n        photo\r\n      }\r\n      eventsCreated {\r\n        id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserProfile = ({ match }) => {\r\n  //PRUEBA PARA grupos\r\n  const uId = match.params.id;\r\n  const activeuser = useSelector(state => state.userId);\r\n  const isActiveUser = uId == activeuser;\r\n\r\n  const { loading, error, data, refetch } = useQuery(GET_USER_PROFILE, {\r\n    variables: {\r\n      userId: parseInt(uId),\r\n    },\r\n  });\r\n\r\n\r\n  //https://source.unsplash.com/random\r\n  var profilePhoto = \"https://source.unsplash.com/random\";\r\n  if (!loading) {\r\n    if (data.userProfile.photo != null) {\r\n      profilePhoto = data.userProfile.photo;\r\n    }\r\n  }\r\n  const grList = [];\r\n  if (!loading) {\r\n    for (let i = 0; i < data.userProfile.groupsFollowing.length; i++) {\r\n      var groupPhoto =\r\n        \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\";\r\n      if (data.userProfile.groupsFollowing[i].photo != null) {\r\n        groupPhoto = data.userProfile.groupsFollowing[i].photo;\r\n      }\r\n      grList.push({\r\n        href: `/groupProfile/${data.userProfile.groupsFollowing[i].id_group}`, //'/rutagrupos/'+data.userProfile.groupsFollowing[i].id_group,\r\n        name: data.userProfile.groupsFollowing[i].name,\r\n        picture: groupPhoto,\r\n        description: data.userProfile.groupsFollowing[i].description,\r\n      });\r\n    }\r\n  }\r\n  //PRUEBA PARA eventos\r\n  const evList = [];\r\n  if (!loading) {\r\n    for (let i = 0; i < data.userProfile.eventsCreated.length; i++) {\r\n      var eventPhoto =\r\n        \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\";\r\n      if (data.userProfile.eventsCreated[i].photo != null) {\r\n        eventPhoto = data.userProfile.eventsCreated[i].photo;\r\n      }\r\n      evList.push({\r\n        href: \"/eventProfile/\" + data.userProfile.eventsCreated[i].id,\r\n        name: data.userProfile.eventsCreated[i].name,\r\n        picture: eventPhoto,\r\n        description: data.userProfile.eventsCreated[i].description,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {loading && <Spinner />}\r\n      {!loading && (\r\n        <ContentLayout>\r\n          <Row className=\"profileBackground\">\r\n            <UserHeader name={data.userProfile.name} photo={profilePhoto} />\r\n          </Row>\r\n          <Row>\r\n            <UserInfo\r\n              name={data.userProfile.name}\r\n              phone={data.userProfile.phone_number}\r\n              age={data.userProfile.age}\r\n              career={data.userProfile.career}\r\n            />\r\n          </Row>\r\n          <Row style={{ marginBottom: 20 }}>\r\n            <EventoUsuario data={evList} isActiveUser={isActiveUser}/>\r\n          </Row>\r\n          <Row style={{ marginBottom: 20 }}>\r\n            <GrupoUsuario data={grList} isActiveUser={isActiveUser}/>\r\n          </Row>\r\n        </ContentLayout>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import UserProfile from \"./userProf\";\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\nimport PhotoLoader from \"../photoLoader\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst CreateGroup = (props) => {\r\n  const { handleSubmit, groupTypes , useImageUrl} = props;\r\n\r\n  return (\r\n      <Form\r\n        labelCol={{ span: 5 }}\r\n        // wrapperCol={{ span: 112 }}\r\n        onFinish={handleSubmit}\r\n        layout=\"vertical\"\r\n        id=\"createGroup\"\r\n      >\r\n        <Form.Item\r\n          label=\"Tipo Grupo\"\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n          name=\"groupType\"\r\n          rules={[{ required: true, message: \"Por favor seleccione un tipo\" }]}\r\n        >\r\n          <Select\r\n            placeholder=\"Seleccione el tipo de grupo\"\r\n            // onChange={handleSelectChange}\r\n          >\r\n            {groupTypes.groupTypes.map((value) => (\r\n              <Option key={value.id_type} value={value.id_type}>{value.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Nombre\"\r\n          labelAlign=\"right\"\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n          rules={[{ required: true, message: \"Ingresa un nombre, maximo 30 caracteres\", max: 30 }]}\r\n          name=\"groupName\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Descripcion\"\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n          name=\"description\"\r\n          rules={[{ required: true, message: \"Ingresa una descripcion, maximo 100 caracteres\" , max:100}]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"Numero de celular\"\r\n          labelAlign=\"left\"\r\n          labelCol={{ span: 6 }}\r\n          labelAlign=\"right\"\r\n          rules={[{message: \"Numero celular debe tener 10 caracteres\", len:10}]}\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n        >\r\n          <Input style={{ width: '100%' }} />\r\n        </Form.Item>\r\n        <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n          <PhotoLoader onFinish={useImageUrl} />\r\n        </div>\r\n        <Form.Item\r\n          type=\"flex\"\r\n          labelAlign=\"center\"\r\n          justify=\"center\"\r\n          labelCol={{ span: 4, offset: 0 }}\r\n          // wrapperCol={{ span: 11, offset: 0 }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Crear\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n  );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import CreateGroupForm from \"./createGroupForm\";\r\nexport default CreateGroupForm;\r\n","import Successful from './Successful';\r\nexport default Successful","import React from \"react\";\r\nimport { Result, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Successful = props => {\r\n  const { redirect, processCompleted } = props;\r\n\r\n  useEffect(() => {\r\n    return () => processCompleted();\r\n  },[]);\r\n\r\n  return (\r\n    <Result\r\n      status=\"success\"\r\n      title=\"Registro Exitoso\"\r\n      extra={[\r\n        <Link to=\"/home\">\r\n          <Button type=\"primary\" key=\"home\">\r\n            Volver a Inicio\r\n          </Button>\r\n        </Link>,\r\n        <Link to={`/${redirect}`}>\r\n          <Button key=\"again\" onClick={()=> processCompleted()}>Nuevo Registro</Button>\r\n        </Link>\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Successful;\r\n","import React, {useState} from \"react\";\r\nimport CreateGroupForm from \"../../components/createGroupForm\";\r\nimport MainLayout from \"../../components/layout\";\r\nimport { Typography, Row, Col } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport ErrorAlert from \"../../components/error\";\r\nimport Successful from \"../../components/succesfulOperation\";\r\nimport backgroundImage from \"../../assets/imgs/undraw_schedule_pnbk.png\";\r\nimport {  useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport gql from 'graphql-tag';\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nconst GROUP_TYPES_QUERY = gql`\r\nquery {\r\n  groupTypes{\r\n    id_type\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\nconst GET_REFRESH_TOKEN = gql`\r\nmutation RefreshTok(\r\n  $refresh: String!\r\n){\r\n  refreshTok(\r\n    input:{\r\n      refresh: $refresh\r\n    })\r\n  {\r\n    \taccess\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst CREATE_GROUP_MUTATION = gql`\r\nmutation CreateNewGroup(\r\n  $id_type: Int!,\r\n  $name: String!,\r\n  $description: String!,\r\n  $contact_number: String!,\r\n  $status: String!,\r\n  $token: String!,\r\n  $photo: String!\r\n  $id_user: ID!\r\n){\r\n  createNewGroup(\r\n    id_user: $id_user\r\n    input:{\r\n      id_type: $id_type\r\n      name: $name\r\n      description: $description\r\n      contact_number: $contact_number\r\n      status: $status\r\n      photo: $photo\r\n    }\r\n    token: {\r\n      token: $token\r\n    }\r\n  ){\r\n    name\r\n  }\r\n}\r\n`;\r\n    \r\nconst CreateGroup = (props) => {\r\n  const [photoPath, setPhotoPath] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const { loading, error, data } = useQuery(GROUP_TYPES_QUERY);\r\n  const [createGroupMutation, { loadingCreate}] = useMutation(CREATE_GROUP_MUTATION, { errorPolicy: 'all' });\r\n  \r\n  const userId =  useSelector(state => state.userId);\r\n\r\n  const handleSubmit = (values) => {\r\n    console.log(values);\r\n    createGroupMutation({\r\n      variables:{\r\n        id_type: parseInt(values.groupType),\r\n        name: values.groupName,\r\n        description: values.description,\r\n        contact_number: values.phone,\r\n        status: \"Ok\",\r\n        token: \"token\",\r\n        photo: photoPath,\r\n        id_user: parseInt(userId)\r\n      }\r\n    });\r\n    setSuccessful(true);\r\n  };\r\n\r\n  const useImageUrl = (photoUrl) => {\r\n    setPhotoPath(photoUrl);\r\n  };\r\n\r\n  // {!loading && error && <ErrorAlert error={error} />}\r\n  return (\r\n    <ContentLayout>\r\n      {loading && <Spinner />}\r\n      \r\n      {!loading && successful && (\r\n        <Successful\r\n          redirect={\"createGroup\"}\r\n          processCompleted={()=>{}}\r\n          //terminar proceso\r\n        />\r\n      )}\r\n      {!loading  && !successful && (\r\n        <div>\r\n          <Title level={2} style={{ textAlign: \"center\" }}>\r\n            Crea un Grupo\r\n          </Title>\r\n          <Row>\r\n            <Col span={12} style={{ padding: \"0 100px\" }}>\r\n              <CreateGroupForm handleSubmit={handleSubmit} groupTypes={data} useImageUrl={useImageUrl}/>\r\n            </Col>\r\n            <Col span={12}>\r\n              <div>\r\n                <img\r\n                  src={backgroundImage}\r\n                  alt=\"Background\"\r\n                  style={{ width: \"100%\" }}\r\n                ></img>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import CreateGroup from \"./createGroup\";\r\nexport default CreateGroup;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst CreateEvent = (props) => {\r\n  const { handleSubmit } = props;\r\n\r\n  return (\r\n      <Form\r\n        labelCol={{ span: 5 }}\r\n        // wrapperCol={{ span: 112 }}\r\n        onFinish={handleSubmit}\r\n        layout=\"vertical\"\r\n        id=\"createGroup\"\r\n      >\r\n        <Form.Item\r\n          label=\"Nombre\"\r\n          labelAlign=\"right\"\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n          rules={[{ required: true, message: \"Ingresa un nombre\" }]}\r\n          name=\"groupName\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Descripcion\"\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n          name=\"description\"\r\n          rules={[{ required: true, message: \"Ingresa una descripcion\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Fechas\"\r\n          wrapperCol={{ span: 24, offset: 0 }}\r\n          name=\"date\"\r\n          rules={[{ required: true, message: \"Ingresa una fecha\" }]}\r\n        >\r\n          <RangePicker showTime />\r\n        </Form.Item>\r\n        <Form.Item\r\n          type=\"flex\"\r\n          labelAlign=\"center\"\r\n          justify=\"center\"\r\n          labelCol={{ span: 4, offset: 0 }}\r\n          // wrapperCol={{ span: 11, offset: 0 }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Crear\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n  );\r\n};\r\n\r\nexport default CreateEvent;\r\n","import CreateEventForm from \"./createEventForm\";\r\nexport default CreateEventForm;\r\n","import React, {useState} from \"react\";\r\nimport CreateEventForm from \"../../components/createEventForm\";\r\nimport MainLayout from \"../../components/layout\";\r\nimport { Typography, Row, Col } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport ErrorAlert from \"../../components/error\";\r\nimport Successful from \"../../components/succesfulOperation\";\r\nimport backgroundImage from \"../../assets/imgs/undraw_schedule_pnbk.png\";\r\nimport {  useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport gql from 'graphql-tag';\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nconst CREATE_EVENT_MUTATION = gql`\r\nmutation CreateEvent(\r\n  $ownerId: Int!\r\n  $ownerType: String!\r\n  $name: String!\r\n  $eventStartDate: String!\r\n  $eventFinishDate: String!\r\n  $description: String!\r\n  $latitude: String!\r\n  $longitude: String!\r\n  $status: String!\r\n  $eventType: String!\r\n  $url: String!\r\n){\r\n  createEvent(\r\n    input:{\r\n      ownerId: $ownerId\r\n      ownerType: $ownerType\r\n      name: $name\r\n      eventStartDate: $eventStartDate\r\n      eventFinishDate: $eventFinishDate\r\n      description: $description\r\n      latitude: $latitude\r\n      longitude: $longitude\r\n      status: $status\r\n      eventType: $eventType\r\n      url: $url\r\n    }\r\n  ){\r\n    message\r\n    status\r\n  }\r\n}\r\n`;\r\n\r\nconst formatDate = (moment) => {\r\n  return moment.format('YYYY-MM-DDThh:mm:ss') + 'Z';\r\n};\r\n\r\n    \r\nconst CreateGroup = (props) => {\r\n  // const dispatch = useDispatch();\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [createEventMutation, { loading}] = useMutation(CREATE_EVENT_MUTATION, { errorPolicy: 'all' });\r\n  const userId = useSelector(state => state.userId);\r\n\r\n  const handleSubmit = (values) => {\r\n    console.log(values);\r\n    const formatedDates = values.date.map(formatDate);\r\n\r\n\r\n    \r\n\r\n    createEventMutation({\r\n      variables:{\r\n        ownerId: parseInt(userId),\r\n        ownerType: \"user\",\r\n        name: values.groupName,\r\n        eventStartDate: formatedDates[0],\r\n        eventFinishDate: formatedDates[1],\r\n        description: values.description,\r\n        latitude: \"4.635462\",\r\n        longitude: \"-74.082722\",\r\n        status: \"active\",\r\n        eventType: \"official\",\r\n        url: \"https://agenciadenoticias.unal.edu.co/typo3temp/_processed_/csm_AgenciaNoticias_20190225-03_02_7e0ef5851b.jpg\",\r\n      }\r\n    });\r\n\r\n    setSuccessful(true);\r\n  };\r\n\r\n  // {!loading && error && <ErrorAlert error={error} />}\r\n  return (\r\n    <ContentLayout>\r\n      {loading && <Spinner />}\r\n      \r\n      {!loading && successful && (\r\n        <Successful\r\n          redirect={\"createEvent\"}\r\n          processCompleted={()=>{}}\r\n          //terminar proceso\r\n        />\r\n      )}\r\n      {!loading  && !successful && (\r\n        <div>\r\n          <Title level={2} style={{ textAlign: \"center\" }}>\r\n            Crea un evento\r\n          </Title>\r\n          <Row>\r\n            <Col span={12} style={{ padding: \"0 100px\" }}>\r\n              <CreateEventForm handleSubmit={handleSubmit}  />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div>\r\n                <img\r\n                  src={backgroundImage}\r\n                  alt=\"Background\"\r\n                  style={{ width: \"100%\" }}\r\n                ></img>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import CreateEvent from \"./createEvent\";\r\nexport default CreateEvent;","import React, { useEffect , useState} from \"react\";\r\nimport ContentLayout from \"../../components/contentLayout\";\r\nimport {ipLoadImages} from '../../server'\r\n\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = info => {\r\n    console.log(\"entergin function -----------------------------------------\");\r\n    \r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n\r\n    console.log(info );\r\n\r\n    console.log(\"entergin other function-----------------------------------------\", info.file.status);\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      console.log(\"ENTERfunction-----------------------------------------\");\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        console.log(imageUrl);\r\n        \r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        });\r\n      });;\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n      <ContentLayout>\r\n      <div>\r\n        <Upload\r\n          name=\"image\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={ipLoadImages}\r\n          beforeUpload={beforeUpload}\r\n          onChange={this.handleChange}\r\n          enctype=\"multipart/form-data\"\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"image\" style={{ width: '100%' }} /> : uploadButton}\r\n        </Upload>\r\n       \r\n      </div>\r\n      </ContentLayout>\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Avatar;\r\n","import Avatar from './photoTest'\r\nexport default Avatar;","import React from \"react\";\r\nimport { BrowserRouter as Routes, Switch, Route } from \"react-router-dom\";\r\nimport MainLayout from \"../components/layout\";\r\nimport Home from \"../views/home\";\r\nimport SignIn from \"../views/signIn\";\r\nimport SignUp from \"../views/signUp\";\r\nimport Groups from \"../views/groups\";\r\nimport Events from \"../views/events\";\r\nimport GroupProfile from \"../views/groupProfile\";\r\nimport EventMap from \"../components/map\";\r\nimport EventProfile from \"../views/eventProfile\";\r\nimport UserProfile from \"../views/userProfile\";\r\n// import EditGroup from \"../views/editGroup\";\r\n// import EditEvent from \"../views/editEvent\";\r\n// import EditProfile from \"../views/editProfile\";\r\nimport CreateGroup from \"../views/createGroup\";\r\nimport CreateEvent from \"../views/createEvent\";\r\n// import CreateProfile from \"../views/createProfile\";\r\n// import NotFound from \"../views/notFound\";\r\n\r\nimport Avatar from '../views/uploadPhotoTest';\r\n\r\nconst routes = () => {\r\n  return (\r\n    <Routes>\r\n      <Switch>\r\n        {/* afuera del MainLayout para que no tengan navbar o footer */}\r\n        <Route exact path=\"/signin\" component={SignIn} />\r\n        <Route exact path=\"/\" component={SignIn} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n        <MainLayout>\r\n          {/* <Redirect exact from=\"/\" to=\"home\" /> */}\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route exact path=\"/searchGroups\" component={Groups} />\r\n          <Route exact path=\"/searchEvents\" component={Events} />\r\n          <Route exact path=\"/createGroup\" component={CreateGroup} />\r\n          <Route exact path=\"/eventProfile/:id\" component={EventProfile} />\r\n          <Route exact path=\"/userProfile/:id\" component={UserProfile} />\r\n          <Route exact path=\"/createEvent\" component={CreateEvent} />\r\n          <Route exact path=\"/groupProfile/:id\" component={GroupProfile} />\r\n          <Route exact path=\"/photo\" component={Avatar} />\r\n        </MainLayout>\r\n        <Route component={SignIn} />\r\n      </Switch>\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default routes;\r\n","import {\r\n    ADD_USER_ID, \r\n    ADD_ACCESS_TOKEN, \r\n    ADD_REFRESH_TOKEN\r\n} from '../actions/actions';\r\n\r\nconst initialState = {\r\n    userId: \"\",\r\n    access: \"\",\r\n    refresh: \"\"\r\n};\r\n\r\nfunction eventumApp(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_USER_ID:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            }\r\n        case ADD_ACCESS_TOKEN:\r\n            return Object.assign({}, state, {\r\n                access: action.access\r\n            });\r\n        case ADD_REFRESH_TOKEN:\r\n            return Object.assign({}, state, {\r\n                refresh: action.refresh\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default eventumApp;","import { createStore } from 'redux'\r\nimport eventumApp from '../reducers/reducers'\r\n\r\nconst store = createStore(eventumApp, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Routes from \"./routes/routes\";\r\nimport store from \"./data/redux/store\";\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Routes />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// return (\r\n//   <StoreProvider>\r\n//     <BreadCrumbContextProvider>\r\n//       <Routes />\r\n//     </BreadCrumbContextProvider>\r\n//   </StoreProvider>\r\n// );\r\n","import React from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport App from './App';\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport {ipApiGetway} from './server'\r\n\r\nconst cache = new InMemoryCache()\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.GATEWAY_URL || ipApiGetway, cache\r\n});\r\n\r\n/*\r\nconst client = new ApolloClient({\r\n  uri: process.env.GATEWAY_URL || 'http://localhost:5000/graphql', cache\r\n});\r\n*/\r\ncache.writeData({  data: {\r\n  token: '',\r\n  type: 0,\r\n  profile: false\r\n }});\r\n\r\n\r\nexport default (\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport ApolloProvider from './ApolloProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {ApolloProvider}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/eventumIcon.fb7c6df3.png\";"],"sourceRoot":""}